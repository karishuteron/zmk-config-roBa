#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "tap-preferred";   // タップ優先に変更（高速入力向き）
    quick-tap-ms = <150>;       // クイックタップ有効化（反応速度向上）
    tapping-term-ms = <250>;    // 既存のまま（ホールド挙動に影響させない）
};

&hold_tap {
    tapping-term-ms = <250>;
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        // 新しいスクロール動作の追加

        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W         &kp E         &kp R             &kp T                                           &kp Y        &kp U  &lt 5 I    &kp O    &lt 5 P
&mt LEFT_CONTROL A  &kp S         &kp D         &kp F             &kp G      &kp ESC               &kp MINUS      &kp H        &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z    &kp X         &kp C         &kp V             &kp B      &kp ESCAPE            &kp EQUAL      &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL           &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 LANGUAGE_2  &lt 2 TAB  &lt 3 LANGUAGE_1      &kp BACKSPACE  &lt 6 SPACE                             &kp DEL
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        SYMBOLS {
            bindings = <
&trans     &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH  &kp PIPE           &kp BACKSPACE
&kp TILDE  &kp DOLLAR       &kp PERCENT   &kp CARET             &trans                 &trans      &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SEMICOLON         &kp SQT            &kp ENTER
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &trans                 &trans      &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp COLON             &kp DOUBLE_QUOTES  &kp RA(ENTER)
&trans     &trans           &trans        &trans                &trans                 &trans      &trans  &trans                                                                                &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
        };

        NUM {
            bindings = <
&trans      &kp F7  &kp F8  &kp F9  &kp F10                          &kp PLUS      &kp N7        &kp N8        &kp N9        &kp MINUS
&trans      &kp F4  &kp F5  &kp F6  &kp F11  &trans       &trans     &kp ASTERISK  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SLASH
&kp ESCAPE  &kp F1  &kp F2  &kp F3  &kp F12  &kp F13      &kp EQUAL  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD
&trans      &trans  &trans  &trans  &trans   &trans       &trans     &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                         &trans         &trans          &kp UP_ARROW  &trans     &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &kp HOME  &kp BACKSPACE  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp END
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans    &kp DELETE     &trans          &trans        &trans     &kp RA(ENTER)
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans    &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans    &kp LC(T)  &trans    &trans                         &none            &none     &none     &none     &none
&trans  &mkp MB1  &mkp MB3   &mkp MB2  &trans  &trans      &kp RC(V)  &kp RC(RS(TAB))  &mkp MB1  &mkp MB3  &mkp MB2  &none
&trans  &mkp MB4  &kp LC(W)  &mkp MB5  &trans  &trans      &kp RC(C)  &none            &none     &none     &none     &none
&trans  &trans    &trans     &trans    &trans  &trans      &trans     &none                                          &none
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        Bluetooths {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
